{"ast":null,"code":"var _jsxFileName = \"/Users/alyssalemon/Desktop/homework-app/src/components/PeopleCard/index.js\";\nimport React from \"react\";\nimport API from \"../../utils/API\";\nimport PeopleList from \"../PeopleList \";\nimport Search from \"../Search\";\n\nclass PeopleCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputValue: \"\",\n      person: [],\n      allPeople: []\n    };\n\n    this.getRandomUsers = () => {\n      API.search().then(res => {\n        const peopleData = res.data.results;\n        let data = peopleData.map(user => {\n          let userFormat = {};\n          userFormat[\"image\"] = user.picture.medium;\n          userFormat[\"name\"] = `${user.name.first} ${user.name.last}`;\n          userFormat[\"location\"] = `${user.location.city}, ${user.location.state}`;\n          userFormat[\"phone\"] = user.phone;\n          userFormat[\"email\"] = user.email;\n          return userFormat;\n        });\n        this.setState({\n          person: data\n        });\n        this.setState({\n          allPeople: data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.locationFilterOnChange = event => {\n      console.log(\"it works\", event.target.value);\n      this.setState({\n        inputValue: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getRandomUsers();\n  } // handleInputChange = event => {\n  //   this.setState({ search: event.targer.value });\n  // };\n\n\n  // handleBtnSubmit = (event) => {\n  //   const letter = event.target.location;\n  //   this.filterLocation(letter);\n  // };\n  peopleFilter() {\n    const filteredPeople = this.state.allPeople.filter(person => {\n      return person.state.includes(this.state.inputValue);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      user: this.allPeople(filteredPeople) // filteredPeople={this.filteredPeople}\n      ,\n      locationFilterOnChange: this.locationFilterOnChangeq,\n      inputValue: this.state.inputValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, this.state.allPeople.map(user => /*#__PURE__*/React.createElement(PeopleList, {\n      id: this.state.allPeople.indexOf(user),\n      key: this.state.allPeople.indexOf(user),\n      image: user.image,\n      name: user.name,\n      location: user.location,\n      phone: user.phone,\n      email: user.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default PeopleCard;","map":{"version":3,"sources":["/Users/alyssalemon/Desktop/homework-app/src/components/PeopleCard/index.js"],"names":["React","API","PeopleList","Search","PeopleCard","Component","state","inputValue","person","allPeople","getRandomUsers","search","then","res","peopleData","data","results","map","user","userFormat","picture","medium","name","first","last","location","city","phone","email","setState","catch","err","console","log","locationFilterOnChange","event","target","value","componentDidMount","peopleFilter","filteredPeople","filter","includes","locationFilterOnChangeq","indexOf","image"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport API from \"../../utils/API\";\nimport PeopleList from \"../PeopleList \";\nimport Search from \"../Search\";\n\nclass PeopleCard extends React.Component {\n  state = {\n    inputValue: \"\",\n    person: [],\n    allPeople: [],\n  };\n\n  componentDidMount() {\n    this.getRandomUsers();\n  }\n\n  // handleInputChange = event => {\n  //   this.setState({ search: event.targer.value });\n  // };\n\n  getRandomUsers = () => {\n    API.search()\n      .then((res) => {\n        const peopleData = res.data.results;\n        let data = peopleData.map((user) => {\n          let userFormat = {};\n          userFormat[\"image\"] = user.picture.medium;\n          userFormat[\"name\"] = `${user.name.first} ${user.name.last}`;\n          userFormat[\n            \"location\"\n          ] = `${user.location.city}, ${user.location.state}`;\n          userFormat[\"phone\"] = user.phone;\n          userFormat[\"email\"] = user.email;\n          return userFormat;\n        });\n        this.setState({ person: data });\n        this.setState({ allPeople: data });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  locationFilterOnChange = (event) => {\n    console.log(\"it works\", event.target.value);\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n  // handleBtnSubmit = (event) => {\n  //   const letter = event.target.location;\n  //   this.filterLocation(letter);\n  // };\n\n  peopleFilter() {\n    const filteredPeople = this.state.allPeople.filter((person) => {\n      return person.state.includes(this.state.inputValue);\n    });\n\n    return (\n      <div>\n        <Search\n          user={this.allPeople(filteredPeople)}\n          // filteredPeople={this.filteredPeople}\n          locationFilterOnChange={this.locationFilterOnChangeq}\n          inputValue={this.state.inputValue}\n        />\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {this.state.allPeople.map((user) => (\n            <PeopleList\n              id={this.state.allPeople.indexOf(user)}\n              key={this.state.allPeople.indexOf(user)}\n              image={user.image}\n              name={user.name}\n              location={user.location}\n              phone={user.phone}\n              email={user.email}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PeopleCard;\n"]},"metadata":{},"sourceType":"module"}