{"ast":null,"code":"var _jsxFileName = \"/Users/alyssalemon/Desktop/homework-app/src/components/PeopleCard/index.js\";\nimport React from \"react\";\nimport API from \"../../utils/API\";\nimport PeopleList from \"../PeopleList \";\n\nclass PeopleCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      view: \"all\",\n      person: [],\n      allPeople: []\n    };\n\n    this.getRandomUsers = () => {\n      API.search().then(res => {\n        const peopleData = res.data.results;\n        let data = peopleData.map(user => {\n          let userFormat = {};\n          userFormat[\"image\"] = user.picture.small;\n          userFormat[\"name\"] = `${user.name.first} ${user.name.last}`;\n          userFormat[\"location\"] = `${user.location.city} ${user.location.state}`;\n          return userFormat;\n        });\n        this.setState({\n          person: data\n        });\n        this.setState({\n          allPeople: data\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.filterLocation = letter => {\n      if (letter !== \"all\") {\n        let selectedUser = [];\n\n        for (const user of this.state.person) {\n          let location = user.location;\n\n          if (letter === location) {\n            selectedUser.push(user);\n          }\n        }\n\n        this.setState({\n          allPeople: selectedUser\n        });\n        this.setState({\n          view: letter\n        });\n      }\n    };\n\n    this.handleBtnSubmit = event => {\n      const letter = event.target.location;\n      this.filterLocation(letter);\n    };\n  }\n\n  componentDidMount() {\n    this.getRandomUsers();\n  } // handleInputChange = event => {\n  //   this.setState({ search: event.targer.value });\n  // };\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      filterLocation: this.filterLocation,\n      handleBtnSubmit: this.handleBtnSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-wrap justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, this.state.allPeople.map(user => /*#__PURE__*/React.createElement(PeopleList, {\n      id: this.state.allPeople.indexOf(user),\n      key: this.state.allPeople.indexOf(user),\n      image: user.image,\n      name: user.name,\n      location: user.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default PeopleCard;","map":{"version":3,"sources":["/Users/alyssalemon/Desktop/homework-app/src/components/PeopleCard/index.js"],"names":["React","API","PeopleList","PeopleCard","Component","state","view","person","allPeople","getRandomUsers","search","then","res","peopleData","data","results","map","user","userFormat","picture","small","name","first","last","location","city","setState","catch","err","console","log","filterLocation","letter","selectedUser","push","handleBtnSubmit","event","target","componentDidMount","render","indexOf","image"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,SAAS,EAAE;AAHL,KAD+B;;AAAA,SAevCC,cAfuC,GAetB,MAAM;AACrBR,MAAAA,GAAG,CAACS,MAAJ,GACGC,IADH,CACSC,GAAD,IAAS;AACb,cAAMC,UAAU,GAAGD,GAAG,CAACE,IAAJ,CAASC,OAA5B;AACA,YAAID,IAAI,GAAGD,UAAU,CAACG,GAAX,CAAgBC,IAAD,IAAU;AAClC,cAAIC,UAAU,GAAG,EAAjB;AACAA,UAAAA,UAAU,CAAC,OAAD,CAAV,GAAsBD,IAAI,CAACE,OAAL,CAAaC,KAAnC;AACAF,UAAAA,UAAU,CAAC,MAAD,CAAV,GAAsB,GAAED,IAAI,CAACI,IAAL,CAAUC,KAAM,IAAGL,IAAI,CAACI,IAAL,CAAUE,IAAK,EAA1D;AACAL,UAAAA,UAAU,CACR,UADQ,CAAV,GAEK,GAAED,IAAI,CAACO,QAAL,CAAcC,IAAK,IAAGR,IAAI,CAACO,QAAL,CAAcnB,KAAM,EAFjD;AAIA,iBAAOa,UAAP;AACD,SATU,CAAX;AAUA,aAAKQ,QAAL,CAAc;AAAEnB,UAAAA,MAAM,EAAEO;AAAV,SAAd;AACA,aAAKY,QAAL,CAAc;AAAElB,UAAAA,SAAS,EAAEM;AAAb,SAAd;AACD,OAfH,EAgBGa,KAhBH,CAgBUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAhBlB;AAiBD,KAjCsC;;AAAA,SAmCvCG,cAnCuC,GAmCrBC,MAAD,IAAY;AAC3B,UAAIA,MAAM,KAAK,KAAf,EAAsB;AACpB,YAAIC,YAAY,GAAG,EAAnB;;AACA,aAAK,MAAMhB,IAAX,IAAmB,KAAKZ,KAAL,CAAWE,MAA9B,EAAsC;AACpC,cAAIiB,QAAQ,GAAGP,IAAI,CAACO,QAApB;;AACA,cAAIQ,MAAM,KAAKR,QAAf,EAAyB;AACvBS,YAAAA,YAAY,CAACC,IAAb,CAAkBjB,IAAlB;AACD;AACF;;AACD,aAAKS,QAAL,CAAc;AAAElB,UAAAA,SAAS,EAAEyB;AAAb,SAAd;AACA,aAAKP,QAAL,CAAc;AAAEpB,UAAAA,IAAI,EAAE0B;AAAR,SAAd;AACD;AACF,KA/CsC;;AAAA,SAgDvCG,eAhDuC,GAgDpBC,KAAD,IAAW;AAC3B,YAAMJ,MAAM,GAAGI,KAAK,CAACC,MAAN,CAAab,QAA5B;AACA,WAAKO,cAAL,CAAoBC,MAApB;AACD,KAnDsC;AAAA;;AAOvCM,EAAAA,iBAAiB,GAAG;AAClB,SAAK7B,cAAL;AACD,GATsC,CAWvC;AACA;AACA;;;AAwCA8B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,cAAc,EAAE,KAAKR,cADvB;AAEE,MAAA,eAAe,EAAE,KAAKI,eAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAKE;AAAK,MAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK9B,KAAL,CAAWG,SAAX,CAAqBQ,GAArB,CAA0BC,IAAD,iBACxB,oBAAC,UAAD;AACE,MAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWG,SAAX,CAAqBgC,OAArB,CAA6BvB,IAA7B,CADN;AAEE,MAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWG,SAAX,CAAqBgC,OAArB,CAA6BvB,IAA7B,CAFP;AAGE,MAAA,KAAK,EAAEA,IAAI,CAACwB,KAHd;AAIE,MAAA,IAAI,EAAExB,IAAI,CAACI,IAJb;AAKE,MAAA,QAAQ,EAAEJ,IAAI,CAACO,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CALF,CADF;AAmBD;;AAzEsC;;AA4EzC,eAAerB,UAAf","sourcesContent":["import React from \"react\";\nimport API from \"../../utils/API\";\nimport PeopleList from \"../PeopleList \";\n\nclass PeopleCard extends React.Component {\n  state = {\n    view: \"all\",\n    person: [],\n    allPeople: [],\n  };\n\n  componentDidMount() {\n    this.getRandomUsers();\n  }\n\n  // handleInputChange = event => {\n  //   this.setState({ search: event.targer.value });\n  // };\n\n  getRandomUsers = () => {\n    API.search()\n      .then((res) => {\n        const peopleData = res.data.results;\n        let data = peopleData.map((user) => {\n          let userFormat = {};\n          userFormat[\"image\"] = user.picture.small;\n          userFormat[\"name\"] = `${user.name.first} ${user.name.last}`;\n          userFormat[\n            \"location\"\n          ] = `${user.location.city} ${user.location.state}`;\n\n          return userFormat;\n        });\n        this.setState({ person: data });\n        this.setState({ allPeople: data });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  filterLocation = (letter) => {\n    if (letter !== \"all\") {\n      let selectedUser = [];\n      for (const user of this.state.person) {\n        let location = user.location;\n        if (letter === location) {\n          selectedUser.push(user);\n        }\n      }\n      this.setState({ allPeople: selectedUser });\n      this.setState({ view: letter });\n    }\n  };\n  handleBtnSubmit = (event) => {\n    const letter = event.target.location;\n    this.filterLocation(letter);\n  };\n\n  render() {\n    return (\n      <div>\n        <Search\n          filterLocation={this.filterLocation}\n          handleBtnSubmit={this.handleBtnSubmit}\n        />\n        <div className=\"d-flex flex-wrap justify-content-center\">\n          {this.state.allPeople.map((user) => (\n            <PeopleList\n              id={this.state.allPeople.indexOf(user)}\n              key={this.state.allPeople.indexOf(user)}\n              image={user.image}\n              name={user.name}\n              location={user.location}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PeopleCard;\n"]},"metadata":{},"sourceType":"module"}